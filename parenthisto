
import org.jlab.jnp.hipo4.io.*; 
import org.jlab.jnp.hipo4.data.*;
import org.jlab.groot.data.*;
import org.jlab.groot.graphics.*;
import org.jlab.groot.math.*;
import org.jlab.groot.ui.*;
import org.jlab.clas.physics.*;
import org.jlab.clas.physics.LorentzVector;
import org.jlab.clas.physics.PhysicsEvent;
import org.jlab.clas.physics.Particle;
import org.jlab.clas.physics.EventFilter;
  

HipoReader reader = new HipoReader(); 
reader.open("coatjava/bin/SimOuts.hipo"); 
 
Event     event = new Event(); 
Bank  particles = new Bank(reader.getSchemaFactory().getSchema("MC::Lund"));

H1F  hpid = new H1F("hpid" ,10000, 10, 8000);
hpid.setTitleX("pid");
  
TCanvas ec = new TCanvas("ec",800,400);
int counter = 0;
while(reader.hasNext()==true){
      reader.nextEvent(event);
      event.read(particles);
      if(particles.getRows()>4){ 
          counter++;
          for(int row = 0; row < particles.getRows(); row++){
              int pid = particles.getInt("pid",row);
              byte parent = particles.getByte("parent",row);
              int parentpid = particles.getInt("pid",parent-1);
              if(pid==211||pid==-211) {
                hpid.fill(parentpid);
              }
           }
       }
}
ec.cd(0);
ec.getPad().getAxisY().setLog(true);
ec.draw(hpid);
