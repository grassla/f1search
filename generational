int counter = 0;

import org.jlab.jnp.hipo4.io.*;
import org.jlab.jnp.hipo4.data.*;
import org.jlab.groot.data.*;
import org.jlab.groot.graphics.*;
import org.jlab.groot.math.*;
import org.jlab.groot.ui.*;
import org.jlab.clas.physics.*;
import org.jlab.clas.physics.LorentzVector;
import org.jlab.clas.physics.PhysicsEvent;
import org.jlab.clas.physics.Particle;
import org.jlab.clas.physics.EventFilter;
HipoReader reader = new HipoReader();
reader.open("coatjava/bin/SimOuts.hipo");

SchemaFactory factory = reader.getSchemaFactory();
factory.show();
Bank particles = new Bank(factory.getSchema("MC::Lund"));
Event     event = new Event();
reader.getEvent(event,0);

int counter = 0;

while(reader.hasNext()==true){
      reader.nextEvent(event);
      event.read(particles);
      if(particles.getRows()>4){ 
          counter++;
          for(int row = 0; row < particles.getRows(); row++){
              int pid = particles.getInt("pid",row);
              byte type = particles.getByte("type",row);
              int index = particles.getInt("index",row);
              byte parent = particles.getByte("parent",row);
              // particles.show();
              if(type==1) {
                  System.out.println("0 " + pid + ";" + " 1 " + parent);
                  byte parent0 = parent;
                  if(parent0!=0) {
                    System.out.println("2 " + parent);
                  }
              } 
           }
       }
  if(counter==2){
    break; 
  }
}
