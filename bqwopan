int type1pos = 0
int type1neg = 0
int notfinalpos = 0
int notfinalneg = 0


import org.jlab.jnp.hipo4.io.*;
import org.jlab.jnp.hipo4.data.*;
import org.jlab.groot.data.*;
import org.jlab.groot.graphics.*;
import org.jlab.groot.math.*;
import org.jlab.groot.ui.*;
import org.jlab.clas.physics.*;
import org.jlab.clas.physics.LorentzVector;
import org.jlab.clas.physics.PhysicsEvent;
import org.jlab.clas.physics.Particle;
import org.jlab.clas.physics.EventFilter;
HipoReader reader = new HipoReader();
reader.open("coatjava/bin/SimOuts.hipo");

SchemaFactory factory = reader.getSchemaFactory();
factory.show();
Bank particles = new Bank(factory.getSchema("MC::Lund"));
Event     event = new Event();

reader.getEvent(event,0);
while(reader.hasNext()==true){
      reader.nextEvent(event);
      event.read(particles);
      int electron = 0;
      int pos_pion = 0;
      int neg_pion = 0;
      if(particles.getRows()>0){
          for(int row = 0; row < particles.getRows(); row++){
              int pid = particles.getInt("pid",row);
              if(pid == 11) electron++;
              if(pid == 211) pos_pion++;
              if(pid == -211) neg_pion++;
           }
           if(electron>=1&&pos_pion>=2&&neg_pion>=2){
            for(int row = 0; row < particles.getRows(); row++){
              int pid = particles.getInt("pid",row);
              int type = particles.getInt("type",row);
              particles.show();
              if(pos_pion>=1) {
                if(type==1) {
                  type1pos++;
                }
                if(type!=1) {
                  notfinalpos++;
                }
              }
              if(neg_pion>=1) {
                if(type==1) {
                  type1neg++;
                }
                if(type!=1) {
                  notfinalneg++;
                }
              }
              System.out.printf("Finalized pos pion", type1pos , "Finalized neg pion", type1neg , "Unfinalized pos pion", notfinalpos , "Unfinalized neg pion", notfinalneg );
           }
      }
}
